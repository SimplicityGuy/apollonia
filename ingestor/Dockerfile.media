# Media Ingestor Dockerfile
# Multi-stage build for optimized image size

# Build stage
FROM python:3.12-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv

WORKDIR /app

# Copy dependency files
COPY pyproject.toml .
COPY ingestor/pyproject.toml ./ingestor/

# Install dependencies
RUN uv venv && \
    uv sync --no-dev

# Runtime stage
FROM python:3.12-slim

# Install runtime dependencies for media processing
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    libavcodec-extra \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1001 -s /bin/bash apollonia

WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder --chown=apollonia:apollonia /app/.venv /app/.venv

# Copy application code
COPY --chown=apollonia:apollonia ingestor/ ./ingestor/

# Set environment variables
ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Default environment variables
ENV AMQP_CONNECTION_STRING="amqp://guest:guest@rabbitmq:5672/"
ENV WATCH_DIRECTORIES="/data"
ENV MEDIA_ONLY="true"
ENV WATCH_SUBDIRS="true"

# Create data directory
RUN mkdir -p /data && chown apollonia:apollonia /data

# Switch to non-root user
USER apollonia

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; sys.exit(0)"

# Volume for watched directories
VOLUME ["/data"]

# Labels
LABEL org.opencontainers.image.title="Apollonia Media Ingestor"
LABEL org.opencontainers.image.description="Enhanced media file monitoring service"
LABEL org.opencontainers.image.authors="robert@simplicityguy.com"
LABEL org.opencontainers.image.source="https://github.com/SimplicityGuy/apollonia"

# Run the media ingestor
CMD ["python", "-m", "ingestor.media_ingestor"]
