"""Initial media catalog schema

Revision ID: c718b8951b71
Revises:
Create Date: 2025-07-26 15:24:19.416883

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c718b8951b71"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "albums",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("artist_id", sa.UUID(), nullable=True),
        sa.Column("year", sa.Integer(), nullable=True),
        sa.Column("musicbrainz_id", sa.String(length=36), nullable=True),
        sa.Column("spotify_id", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("extra_metadata", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("musicbrainz_id"),
        sa.UniqueConstraint("spotify_id"),
        sa.UniqueConstraint("title", "artist_id", name="uq_album_artist"),
    )
    op.create_index("idx_album_year", "albums", ["year"], unique=False)
    op.create_index(op.f("ix_albums_artist_id"), "albums", ["artist_id"], unique=False)
    op.create_index(op.f("ix_albums_title"), "albums", ["title"], unique=False)
    op.create_table(
        "artists",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("sort_name", sa.Text(), nullable=True),
        sa.Column("musicbrainz_id", sa.String(length=36), nullable=True),
        sa.Column("spotify_id", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("extra_metadata", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("musicbrainz_id"),
        sa.UniqueConstraint("spotify_id"),
    )
    op.create_index(op.f("ix_artists_name"), "artists", ["name"], unique=True)
    op.create_table(
        "genres",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("parent_genre", sa.String(length=100), nullable=True),
        sa.Column("source", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_genres_name"), "genres", ["name"], unique=True)
    op.create_index(op.f("ix_genres_parent_genre"), "genres", ["parent_genre"], unique=False)
    op.create_table(
        "media_files",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("sha256_hash", sa.String(length=64), nullable=False),
        sa.Column("xxh128_hash", sa.String(length=32), nullable=False),
        sa.Column("original_path", sa.Text(), nullable=False),
        sa.Column("filename", sa.Text(), nullable=False),
        sa.Column("extension", sa.String(length=10), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("media_type", sa.String(length=20), nullable=False),
        sa.Column("mime_type", sa.String(length=100), nullable=True),
        sa.Column("file_created", sa.DateTime(timezone=True), nullable=True),
        sa.Column("file_modified", sa.DateTime(timezone=True), nullable=True),
        sa.Column("file_accessed", sa.DateTime(timezone=True), nullable=True),
        sa.Column("ingested_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("analyzed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("duration", sa.Float(), nullable=True),
        sa.Column("bitrate", sa.Integer(), nullable=True),
        sa.Column("sample_rate", sa.Integer(), nullable=True),
        sa.Column("channels", sa.Integer(), nullable=True),
        sa.Column("width", sa.Integer(), nullable=True),
        sa.Column("height", sa.Integer(), nullable=True),
        sa.Column("fps", sa.Float(), nullable=True),
        sa.Column("video_codec", sa.String(length=50), nullable=True),
        sa.Column("audio_codec", sa.String(length=50), nullable=True),
        sa.Column("has_audio", sa.Boolean(), nullable=True),
        sa.Column("parent_dir", sa.Text(), nullable=True),
        sa.Column("grandparent_dir", sa.Text(), nullable=True),
        sa.Column("file_metadata", sa.JSON(), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("sha256_hash", "original_path", name="uq_file_hash_path"),
    )
    op.create_index(
        "idx_ingested_analyzed", "media_files", ["ingested_at", "analyzed_at"], unique=False
    )
    op.create_index("idx_media_type_status", "media_files", ["media_type", "status"], unique=False)
    op.create_index(op.f("ix_media_files_extension"), "media_files", ["extension"], unique=False)
    op.create_index(op.f("ix_media_files_media_type"), "media_files", ["media_type"], unique=False)
    op.create_index(
        op.f("ix_media_files_sha256_hash"), "media_files", ["sha256_hash"], unique=False
    )
    op.create_index(op.f("ix_media_files_status"), "media_files", ["status"], unique=False)
    op.create_index(
        op.f("ix_media_files_xxh128_hash"), "media_files", ["xxh128_hash"], unique=False
    )
    op.create_table(
        "ml_predictions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("media_file_id", sa.UUID(), nullable=False),
        sa.Column("model_name", sa.String(length=100), nullable=False),
        sa.Column("model_version", sa.String(length=50), nullable=False),
        sa.Column("prediction_type", sa.String(length=50), nullable=False),
        sa.Column("predicted_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("predictions", sa.JSON(), nullable=False),
        sa.Column("top_labels", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("top_scores", postgresql.ARRAY(sa.Float()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "media_file_id", "model_name", "prediction_type", name="uq_file_model_prediction"
        ),
    )
    op.create_index(
        "idx_prediction_type_labels",
        "ml_predictions",
        ["prediction_type", "top_labels"],
        unique=False,
    )
    op.create_index(
        op.f("ix_ml_predictions_media_file_id"), "ml_predictions", ["media_file_id"], unique=False
    )
    op.create_index(
        op.f("ix_ml_predictions_model_name"), "ml_predictions", ["model_name"], unique=False
    )
    op.create_index(
        op.f("ix_ml_predictions_prediction_type"),
        "ml_predictions",
        ["prediction_type"],
        unique=False,
    )
    op.create_table(
        "processing_queue",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("file_path", sa.Text(), nullable=False),
        sa.Column("sha256_hash", sa.String(length=64), nullable=True),
        sa.Column("queue_name", sa.String(length=50), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("attempts", sa.Integer(), nullable=False),
        sa.Column("last_error", sa.Text(), nullable=True),
        sa.Column("queued_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("message_data", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("file_path"),
    )
    op.create_index(
        "idx_queue_status_priority",
        "processing_queue",
        ["queue_name", "status", "priority"],
        unique=False,
    )
    op.create_index(
        "idx_queue_timestamps",
        "processing_queue",
        ["queued_at", "started_at", "completed_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_processing_queue_queue_name"), "processing_queue", ["queue_name"], unique=False
    )
    op.create_index(
        op.f("ix_processing_queue_sha256_hash"), "processing_queue", ["sha256_hash"], unique=False
    )
    op.create_index(
        op.f("ix_processing_queue_status"), "processing_queue", ["status"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_processing_queue_status"), table_name="processing_queue")
    op.drop_index(op.f("ix_processing_queue_sha256_hash"), table_name="processing_queue")
    op.drop_index(op.f("ix_processing_queue_queue_name"), table_name="processing_queue")
    op.drop_index("idx_queue_timestamps", table_name="processing_queue")
    op.drop_index("idx_queue_status_priority", table_name="processing_queue")
    op.drop_table("processing_queue")
    op.drop_index(op.f("ix_ml_predictions_prediction_type"), table_name="ml_predictions")
    op.drop_index(op.f("ix_ml_predictions_model_name"), table_name="ml_predictions")
    op.drop_index(op.f("ix_ml_predictions_media_file_id"), table_name="ml_predictions")
    op.drop_index("idx_prediction_type_labels", table_name="ml_predictions")
    op.drop_table("ml_predictions")
    op.drop_index(op.f("ix_media_files_xxh128_hash"), table_name="media_files")
    op.drop_index(op.f("ix_media_files_status"), table_name="media_files")
    op.drop_index(op.f("ix_media_files_sha256_hash"), table_name="media_files")
    op.drop_index(op.f("ix_media_files_media_type"), table_name="media_files")
    op.drop_index(op.f("ix_media_files_extension"), table_name="media_files")
    op.drop_index("idx_media_type_status", table_name="media_files")
    op.drop_index("idx_ingested_analyzed", table_name="media_files")
    op.drop_table("media_files")
    op.drop_index(op.f("ix_genres_parent_genre"), table_name="genres")
    op.drop_index(op.f("ix_genres_name"), table_name="genres")
    op.drop_table("genres")
    op.drop_index(op.f("ix_artists_name"), table_name="artists")
    op.drop_table("artists")
    op.drop_index(op.f("ix_albums_title"), table_name="albums")
    op.drop_index(op.f("ix_albums_artist_id"), table_name="albums")
    op.drop_index("idx_album_year", table_name="albums")
    op.drop_table("albums")
    # ### end Alembic commands ###
