name: 'Setup Python Environment'
description: 'Setup Python with uv, caching, and dependency installation'
author: 'Apollonia Project'

inputs:
  python-version:
    description: 'Python version to install'
    required: false
    default: '3.12'
  install-just:
    description: 'Whether to install just command runner'
    required: false
    default: 'true'
  install-dependencies:
    description: 'Whether to install Python dependencies'
    required: false
    default: 'true'
  dependency-groups:
    description: 'Dependency groups to install (e.g., "--all-extras")'
    required: false
    default: '--frozen --all-extras'
  cache-key-prefix:
    description: 'Cache key prefix for dependency caching'
    required: false
    default: 'python'

outputs:
  python-version:
    description: 'The installed Python version'
    value: ${{ steps.python-version.outputs.version }}
  cache-hit:
    description: 'Whether the cache was hit'
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: 📦 Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock

    - name: 🐍 Set up Python ${{ inputs.python-version }}
      id: python-version
      shell: bash
      run: |
        uv python install ${{ inputs.python-version }}
        echo "version=${{ inputs.python-version }}" >> $GITHUB_OUTPUT

    - name: 💾 Cache Python dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          ~/.cache/pip
          .venv
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-py${{ inputs.python-version }}-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
        restore-keys: |
          ${{ inputs.cache-key-prefix }}-${{ runner.os }}-py${{ inputs.python-version }}-

    - name: 🔧 Install just
      if: inputs.install-just == 'true'
      uses: extractions/setup-just@v2
      with:
        just-version: '1.38.0'

    - name: 📦 Install Python dependencies
      if: inputs.install-dependencies == 'true'
      shell: bash
      run: |
        echo "📦 Installing Python dependencies..."
        uv sync ${{ inputs.dependency-groups }}
