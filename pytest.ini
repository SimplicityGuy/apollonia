[pytest]
# Minimum version of pytest required
minversion = 7.0

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Default command line options
addopts =
    # Show extra test summary info
    -ra
    # Verbose output
    -v
    # Show local variables in tracebacks
    --showlocals
    # Strict markers (fail on unknown markers)
    --strict-markers
    # Coverage options when running with coverage
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    # Show the slowest 10 tests
    --durations=10

# Test paths
testpaths =
    tests
    frontend/src

# Ignore paths
norecursedirs =
    .git
    .tox
    dist
    build
    *.egg
    node_modules
    __pycache__
    .pytest_cache
    .venv
    venv

# Coverage options
[coverage:run]
source = .
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*
    */node_modules/*
    */migrations/*
    */conftest.py
    */fixtures.py
    setup.py
    */frontend/*

[coverage:report]
# Minimum coverage percentage required
fail_under = 80
precision = 2
show_missing = True
skip_covered = True

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    docker: marks tests as requiring Docker
    e2e: marks tests as end-to-end tests
    authenticated: marks tests as requiring authentication
    linux_only: marks tests as Linux-only
    requires_asyncinotify: marks tests as requiring asyncinotify
    playwright: marks tests as requiring Playwright for browser automation

# Asyncio configuration
asyncio_mode = auto

# Warning configuration
filterwarnings =
    # Ignore deprecation warnings from third-party libraries
    ignore::DeprecationWarning:aio_pika.*
    ignore::DeprecationWarning:neo4j.*
    # Convert other warnings to errors
    error::UserWarning
    error::FutureWarning

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
timeout = 300
timeout_method = thread

# Test output
console_output_style = progress

# Doctest options
doctest_optionflags = NORMALIZE_WHITESPACE ELLIPSIS

# Environment variables for tests
[pytest:env]
TESTING = true
AMQP_CONNECTION_STRING = amqp://guest:guest@localhost:5672/
NEO4J_URI = bolt://localhost:7687
NEO4J_USER = neo4j
NEO4J_PASSWORD = password
